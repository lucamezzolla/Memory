package com.lucamezzolla.memory;

import java.awt.FlowLayout;
import java.awt.Toolkit;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.util.Properties;

import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author Luca
 */
public class MainFrame extends javax.swing.JFrame implements LangInterface, DiffInterface, GridInterface {

    private final Properties prop;
    private InputStream inputStream;
    private int diffChoice = 1;
    private JLabel pic = new JLabel();
    
    /**
     * Creates new form MainFrame
     * @throws java.io.FileNotFoundException
     */
    public MainFrame() throws FileNotFoundException, IOException {
        initComponents();
        prop = new Properties();
        inputStream = getClass().getResourceAsStream("english.properties");
        prop.load(inputStream);
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("mind.png")));
        setMenuLabel(prop);
        setLayout(new FlowLayout(FlowLayout.CENTER));
        pic.setIcon(new javax.swing.ImageIcon(getClass().getResource("mind.png")));
        setSize(pic.getIcon().getIconWidth(), pic.getIcon().getIconHeight() + 80);
        getContentPane().add(pic);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        start = new javax.swing.JMenuItem();
        exit = new javax.swing.JMenuItem();
        optionsMenu = new javax.swing.JMenu();
        timer = new javax.swing.JMenuItem();
        diff = new javax.swing.JMenuItem();
        lang = new javax.swing.JMenuItem();
        aboutMenu = new javax.swing.JMenu();
        info = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Memory");
        setMaximumSize(new java.awt.Dimension(1000, 1000));
        setPreferredSize(new java.awt.Dimension(0, 0));
        setResizable(false);
        getContentPane().setLayout(new java.awt.FlowLayout());

        fileMenu.setText("File");

        start.setText("Start");
        start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startActionPerformed(evt);
            }
        });
        fileMenu.add(start);

        exit.setText("Exit");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });
        fileMenu.add(exit);

        menuBar.add(fileMenu);

        optionsMenu.setText("Options");

        timer.setText("Timer");
        timer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timerActionPerformed(evt);
            }
        });
        optionsMenu.add(timer);

        diff.setText("Difficiulty");
        diff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                diffActionPerformed(evt);
            }
        });
        optionsMenu.add(diff);

        lang.setText("Change your language");
        lang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                langActionPerformed(evt);
            }
        });
        optionsMenu.add(lang);

        menuBar.add(optionsMenu);

        aboutMenu.setText("?");

        info.setText("About");
        info.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                infoActionPerformed(evt);
            }
        });
        aboutMenu.add(info);

        menuBar.add(aboutMenu);

        setJMenuBar(menuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitActionPerformed

    private void langActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_langActionPerformed
        LanguagesForm lf = new LanguagesForm();
        lf.setListener(this);
        lf.setTitle(prop.getProperty("lang"));
        lf.setLocationRelativeTo(this);
        lf.setVisible(true);
    }//GEN-LAST:event_langActionPerformed

    private void infoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_infoActionPerformed
        InfoForm infoForm = new InfoForm(prop);
        infoForm.setTitle(prop.getProperty("info"));
        infoForm.setLocationRelativeTo(this);
        infoForm.setVisible(true);
    }//GEN-LAST:event_infoActionPerformed

    private void diffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_diffActionPerformed
        DiffForm diffForm = new DiffForm(prop, diffChoice);
        diffForm.setListener(this);
        diffForm.setTitle(prop.getProperty("diff"));
        diffForm.setLocationRelativeTo(this);
        diffForm.setVisible(true);
    }//GEN-LAST:event_diffActionPerformed

    private void timerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timerActionPerformed
        try {
            TimerForm timerForm = new TimerForm(prop);
            timerForm.setTitle("Timer");
            timerForm.setLocationRelativeTo(this);
            timerForm.setVisible(true);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
            System.exit(0);
        }
    }//GEN-LAST:event_timerActionPerformed

    private void startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startActionPerformed
        try {
            fileMenu.setEnabled(false);
            optionsMenu.setEnabled(false);
            aboutMenu.setEnabled(false);
            getContentPane().removeAll();
            getContentPane().repaint();
            getContentPane().revalidate();
            switch(diffChoice) {
                case 1:
                    GridEasy gridE = new GridEasy(prop, diffChoice);
                    gridE.setListener(this);
                    getContentPane().add(gridE);
                    break;
                case 2:
                    GridMedium gridM = new GridMedium(prop, diffChoice);
                    gridM.setListener(this);
                    getContentPane().add(gridM);
                    break;
                case 3:
                    GridHard grid = new GridHard(prop, diffChoice);
                    grid.setListener(this);
                    getContentPane().add(grid);
                    break;
            }
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
            System.exit(1);
        }
    }//GEN-LAST:event_startActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu aboutMenu;
    private javax.swing.JMenuItem diff;
    private javax.swing.JMenuItem exit;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenuItem info;
    private javax.swing.JMenuItem lang;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenu optionsMenu;
    private javax.swing.JMenuItem start;
    private javax.swing.JMenuItem timer;
    // End of variables declaration//GEN-END:variables

    private void setMenuLabel(Properties prop) {
        fileMenu.setText(prop.getProperty("fileMenu"));
        start.setText(prop.getProperty("start"));
        exit.setText(prop.getProperty("exit"));
        optionsMenu.setText(prop.getProperty("optionsMenu"));
        timer.setText(prop.getProperty("timer"));
        diff.setText(prop.getProperty("diff"));
        lang.setText(prop.getProperty("lang"));
        info.setText(prop.getProperty("info"));
    }

	public void changeLang(String lang) {
		try {
			inputStream = getClass().getResourceAsStream(Language.getFileName(lang));
			prop.load(inputStream);
			setMenuLabel(prop);
		} catch (IOException ex) {
			JOptionPane.showMessageDialog(null, ex.getMessage());
			System.exit(1);
		}
	}
    
    public void changeDiff(int n) {
        diffChoice = n;
    }

    
    public void stopActivity() {
        fileMenu.setEnabled(true);
        optionsMenu.setEnabled(true);
        aboutMenu.setEnabled(true);
        getContentPane().removeAll();
        getContentPane().repaint();
        getContentPane().revalidate();
        getContentPane().add(pic);
    }
}